?ksvm
install.packages("kernlab")
?ksvm
library(kernlab)
?ksvm
library(randomForest)
?randomForest
?train
library(caret)
?train
names(getModelInfo())
install.packages("FSelector")
Sys.setenv("JAVA_HOME=/usr/lib/jvm/java-7-oracle/")
install.packages("FSelector")
install.packages("FSelector")
install.packages("RWekajars")
install.packages("RWekajars")
install.packages("RWekajars")
java_version=`${JAVA} getsp "java.version"`
install.packages("RWekajars")
install.packages("RWekajars")
install.packages("RWeka")
install.packages("RWekajars")
install.packages("RWeka")
install.packages("FSelector")
data("iris")
subset <- cfs(Species ~ ., iris)
library(FSelector)
subset <- cfs(Species ~ ., iris)
install.packages("rJava")
subset <- cfs(Species ~ ., iris)
library(FSelector)
library(randomForest)
?randomForest
library(qqman)
library(muStat)
library(data.table)
install.packages("glmnet")
dir.create("~/Dropbox/cancer-pulmon-chr12/new-framework/embedded-lasso/reduced_dataset_threshold003/NO_SAMPLING")
setwd("~/Dropbox/cancer-pulmon-chr12/new-framework/embedded-lasso/reduced_dataset_threshold003/NO_SAMPLING")
out.train.cancer.data <- fread("~/Dropbox/cancer-pulmon-chr12/new-framework/embedded-lasso/reduced_dataset_threshold003/reduced_dataset_threshold003_with_pheno_NO_SAMPLING_TRAIN.csv", data.table = FALSE, header = TRUE, sep=",")
library(data.table)
out.train.cancer.data <- fread("~/Dropbox/cancer-pulmon-chr12/new-framework/embedded-lasso/reduced_dataset_threshold003/reduced_dataset_threshold003_with_pheno_NO_SAMPLING_TRAIN.csv", data.table = FALSE, header = TRUE, sep=",")
out.test.cancer.data <- fread("~/Dropbox/cancer-pulmon-chr12/new-framework/reduced_dataset_threshold003/reduced_dataset_threshold003_with_pheno_TEST.csv", data.table = FALSE, header = TRUE, sep = ",")
?glmnet
library(glmnet)
?glmnet
?cv.glmnet
?glm
load("~/Dropbox/cancer-pulmon-chr12/new-framework/filter-chi-squared/linear_SVM/reduced_dataset_threshold003/NO_SAMPLING/linear_SVM_classification_vs_regression.RData")
svm.linear.classification.result
load("~/Dropbox/cancer-pulmon-chr12/new-framework/filter-chi-squared/linear_SVM/reduced_dataset_threshold003/SMOTE_SAMPLING/linear_SVM_classification_vs_regression.RData")
svm.linear.classification.result
load("~/Dropbox/cancer-pulmon-chr12/new-framework/filter-chi-squared/linear_SVM/reduced_dataset_threshold003/NO_SAMPLING/linear_SVM_classification_vs_regression.RData")
svm.linear.classification.result
table(out.train.cancer.data[, 1])
table(out.test.cancer.data[, 1])
?ksvm
library(kernlab)
?ksvm
?glm
library(caret)
?createFolds
round(3*10^seq(1, 3, by = 0.2))
seq(1,3)
seq(1,3, by = 0.2)
seq(5, 105, by = 15))
seq(5, 105, by = 15)
setRepositories()
install.packages("seq2pathway")
install.packages("biomaRt")
#ERROR: dependencies ‘GSA’, ‘biomaRt’
setRepositories()
1
setRepositories()
setRepositories()
install.packages("XML")
install.packages("RCurl", dependencies = TRUE)
install.packages("XML", dependencies = TRUE)
strsplit("12:91194805:T:C_T", "_")[[1]][1]
var.name = "12:91194805:T:C_T"
strsplit(var.name, "_")[[1]][1]
strsplit(var.name, "_")[[1]][2]
strsplit(var.name, ":")[[1]][2]
paste0("chr", strsplit(var.name, ":")[[1]][1])
var.name = "12:102246473"
strsplit(var.name, "_")[[1]][1]
iden <- data.frame(ID1 = c(1,2,3,4,5), ID2 = c(33, 22, 33, 11, 44))
which(duplicated(iden[, 'ID2']) == TRUE)
help(condes)
library(gdata)
library(FactoMineR)
library(calibrate)
help(condes)
help(catdes)
install.packages("mixOmics")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages("mixOmics")
library(mixOmics)
dfM <- read.xls("~/Documentos/HealthForecast2/data/Plasma_metabolomics_depurades.xlsx", sheet = 1, header = TRUE)
library(gdata)
dfM <- read.xls("~/Documentos/HealthForecast2/data/Plasma_metabolomics_depurades.xlsx", sheet = 1, header = TRUE)
View(dfM)
dfL <- read.xls("~/Documentos/HealthForecast2/data/liver_lipidomics_depurades.xlsx", sheet = 1, header = TRUE)
dfL <- read.csv2("~/Documentos/HealthForecast2/data/liver_lipidomics_depurades.xlsx", header = TRUE, sep = ";")
dfL <- read.csv2("~/Documentos/HealthForecast2/data/liver_lipidomics_depurades.csv", header = TRUE, sep = ";")
View(dfL)
dfT <- read.csv2("~/Documentos/HealthForecast2/data/transcriptomics_depurades_T.csv", header = TRUE, sep = ";")
dfT <- read.xls("~/Documentos/HealthForecast2/data/transcriptomics_depurades.xlsx", sheet = 1, header = TRUE)
rm(dfT)
dfT <- read.csv2("~/Documentos/HealthForecast2/data/transcriptomics_depurades.csv", header = TRUE)
View(dfT)
dfT.columns = dfT[2:nrow(dfT), 1]
dfT.ordre = dfT[1, 2:ncol(dfT)]
View(dfT.ordre)
dfT.ordre = colnames(dfT)[2:ncol(dfT)]
dfT.ordre = colnames(dfT)
dfT.ordre
dfT <- read.csv2("~/Documentos/HealthForecast2/data/transcriptomics_depurades.csv", header = FALSE)
View(dfT)
dfT.ordre <- dfT[1, 2:ncol(dfT)]
View(dfT.ordre)
dfT.columns <- c(dfT[2:nrow(dfT), 1])
dfT.ordre <- c(dfT[1, 2:ncol(dfT)])
View(dfT)
dfT.columns[1:5]
dfT <- read.csv2("~/Documentos/HealthForecast2/data/transcriptomics_depurades.csv", header = FALSE, row.names = 1)
rownames(dfT)[1:5]
dfT.columns <- c(rownames(dfT)[2:nrow(dfT)])
View(dfT)
View(dfT)
dfT.ordre <- c(dfT[1,])
View(dfT)
help(t)
View(dfM)
View(dfL)
dfT.columns <- c("TR", "Nro.Ordre", rownames(dfT)[2:nrow(dfT)])
View(dfL)
dfT.TR <- c("T1",	"T1",	"T1",	"T2",	"T2",	"T2",	"T3",	"T3",	"T4"	"T1",	"T1",	"T2",	"T3",	"T3",	"T4",	"T4",	"T1",	"T1",	"T2",	"T3",	"T4",	"T2",	"T2",	"T3",	"T4",	"T4")
dfT.TR <- c("T1", "T1", "T1", "T2", "T2", "T2", "T3", "T3", "T4",	"T1",	"T1",	"T2",	"T3",	"T3",	"T4",	"T4",	"T1",	"T1",	"T2",	"T3",	"T4",	"T2",	"T2",	"T3",	"T4",	"T4")
dfT.TR <- as.factor(c("T1", "T1", "T1", "T2", "T2", "T2", "T3", "T3", "T4",	"T1",	"T1",	"T2",	"T3",	"T3",	"T4",	"T4",	"T1",	"T1",	"T2",	"T3",	"T4",	"T2",	"T2",	"T3",	"T4",	"T4"))
dfT.TR
dfT <- dfT[-1,]
dfT <- t(dfT)
View(dfT)
ncol(dfT)
dfT <- cbind(dfT.TR, cbind(dfT.ordre, dfT))
View(dfT)
colnames(dfT) <- dfT.columns
View(dfT)
nrow(dfT)
c(5:9, seq(10, 18, 2), seq(20,30,5))
data('breast.TCGA')
data = list(mrna = breast.TCGA$data.train$mrna,
mirna = breast.TCGA$data.train$mirna,
prot = breast.TCGA$data.train$protein)
lapply(data, dim)
breast.TCGA$data.train$mrna
View(breast.TCGA$data.train$mrna)
c(5:9, seq(10, 18, 2), seq(20,30,5))
lapply(data, dim)
test.keepX = list ("mrna" = c(5:9, seq(10, 18, 2), seq(20,30,5)),
"mirna" = c(5:9, seq(10, 18, 2), seq(20,30,5)),
"prot" = c(5:9, seq(10, 18, 2), seq(20,30,5)))
test.keepX
ncomp = 2
design = matrix(1, ncol = length(data), nrow = length(data), dimnames = list(names(data), names(data)))
diag(design) = 0
design
Y = breast.TCGA$data.train$subtype
summary(Y)
ncomp = 2
design = matrix(1, ncol = length(data), nrow = length(data), dimnames = list(names(data), names(data)))
diag(design) = 0
design
test.keepX = list ("mrna" = c(5:9, seq(10, 18, 2), seq(20,30,5)),
"mirna" = c(5:9, seq(10, 18, 2), seq(20,30,5)),
"prot" = c(5:9, seq(10, 18, 2), seq(20,30,5)))
tune.TCGA = tune.block.splsda(X = data, Y = Y, ncomp = ncomp,
test.keepX = test.keepX, design = design)
help(tune.block.splsda)
tune.TCGA = tune.block.splsda(X = data, Y = Y, ncomp = ncomp,
test.keepX = test.keepX, design = design, cpus = 4)
install.packages("snow")
library(snow)
tune.TCGA = tune.block.splsda(X = data, Y = Y, ncomp = ncomp,
test.keepX = test.keepX, design = design, cpus = 4)
string <- c("xy_100_ab", "xy_101_ab","xy_102_ab","xy_103_ab")
out <- data.frame( do.call( rbind, strsplit( string, '_' ) ) )
View(out)
help(paste)
df = data.frame(a = c(1,1,1), b = c(2,2,2), c = c(3,3,3))
df
paste(df, collapse = '\t')
strsplit(paste(df, collapse = '\t'), split = '\t')
prueba = strsplit(paste(df, collapse = '\t'), split = '\t')
prueba[0]
prueba[1]
prueba = unlist(strsplit(paste(df, collapse = '\t'), split = '\t'))
prueba
prueba[1]
prueba[2]
strsplit(prueba[1], split = ',')
prueba[2]
as.vector(prueba[2])
dos = as.vector(prueba[2])
dos
strsplit(paste0(df, collapse = '\t'), split = '\t')
paste(c(1,2,3,4,5), collapse = '\t')
paste(df, sep = ',' collapse = '\t')
paste(df, sep = ',', collapse = '\t')
paste(df, sep = ';', collapse = '\t')
paste(df, sep = ';')
paste(as.matrix(df), sep = ',' collapse = '\t')
paste(as.matrix(df), sep = ',', collapse = '\t')
paste(as.matrix(df), collapse = '\t')
paste(as.matrix(df), collapse = '\t', sep = "; ")
paste0(as.matrix(df), collapse = '\t', sep = "; ")
paste0(as.matrix(df), collapse = '\t')
as.matrix(df)
toString(df)
dat <- data.frame(x=1:5, y=letters[1:5])
(dat$z <- with(dat, paste(x, y, sep="-")))
dat
x
prueba
df
apply(df, 1, paste, collapse=",")
df = data.frame(a = c(1,4,7), b = c(2,5,8), c = c(3,6,9))
df
apply(df, 1, paste, collapse=",")
apply(apply(df, 1, paste, collapse=","), 1, paste, collapse="\t")
p1 = apply(df, 1, paste, collapse=",")
pa
pap1[0]
pap1[1]
pa1[1]
p1[1]
p2 = apply(p1, 1, paste, collapse="\t")
p2 = paste(p1, collapse="\t")
p2
p3 = unlist(strsplit(p2, split = "\t"))
p3
strsplit(as.character(p3),',')
unlist(strsplit(as.character(p3),','))
as.data.frame(strsplit(as.character(p3),','))
data.frame(p3)
p4 = apply(p3, 1, strsplit, split=",")
as.character(p3)
p4 = apply(as.character(p3), 1, strsplit, split=",")
strsplit(p3, split = ',')
p4 = strsplit(p3, split = ',')
p4[[1]]
p4[[1]][1]
p4[[1]][2]
read.csv(text = as.character(p3), sep = ',')
read.csv(text = as.character(p3), sep = ',', header = FALSE)
strsplit("A:12:123", ":")
strsplit(":12:123", ":")
snp.name <- ""
chr.number = 12
snp.position <- 2760508.
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
library(seq2pathway)
library(data.table)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.data <- data.frame(chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
var.name <- "rs12243353:10:19564551"
library(seq2pathway)
library(data.table)
significant.snps.related.genes <- c()
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_CodingGeneOnlyResult["gene_name"]
snp.related.genes$seq2gene_FullResult
var.name <- "rs80192647:5:43666353"
significant.snps.related.genes <- c()
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_CodingGeneOnlyResult["gene_name"]
significant.snps.related.genes <- c()
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_FullResult
snp.related.genes$seq2gene_CodingGeneOnlyResult
var.name <- "rs77268299:11:81638410"
significant.snps.related.genes <- c()
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_FullResult
snp.related.genes$seq2gene_CodingGeneOnlyResult["gene_name"]
var.name <- "rs59106543:3:186433716"
significant.snps.related.genes <- c()
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_FullResult
snp.related.genes$seq2gene_CodingGeneOnlyResult["gene_name"]
var.name <- "rs117678731:11:81582522"
significant.snps.related.genes <- c()
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_FullResult
snp.related.genes$seq2gene_CodingGeneOnlyResult["gene_name"]
var.name <- "rs62315511:4:68078443"
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_FullResult
snp.related.genes$seq2gene_CodingGeneOnlyResult["gene_name"]
var.name <- "rs8034352:15:79707129"
snp.info <- strsplit(var.name, ":")
snp.name <- snp.info[[1]][1]
chr.number <- as.numeric(snp.info[[1]][2])
snp.position <- as.numeric(snp.info[[1]][3])
snp.data <- data.frame(rs = snp.name, chrom = paste0("chr", chr.number), start = snp.position, end = snp.position)
snp.related.genes <- runseq2gene(inputfile = snp.data, genome = "hg19", adjacent = FALSE, SNP = TRUE, search_radius = 1000, PromoterStop = FALSE, NearestTwoDirection = TRUE)
snp.related.genes$seq2gene_FullResult
snp.related.genes$seq2gene_CodingGeneOnlyResult["gene_name"]
matrix([1 1; 2])
matrix(c(32990, 189, 450, 8), nrow = 2, ncol = 2)
matrix(c(32990, 450, 189, 8), nrow = 2, ncol = 2)
fisher.test(matrix(c(32990, 450, 189, 8), nrow = 2, ncol = 2))
fisher.test(matrix(c(32990, 450, 1304, 37), nrow = 2, ncol = 2))
matrix(c(32990, 189, 450, 8), nrow = 2, ncol = 2)
fisher.test(matrix(c(32990, 0, 189, 0), nrow = 2, ncol = 2))
fisher.test(matrix(c(32990, 16, 1304, 0), nrow = 2, ncol = 2))
fisher.test(matrix(c(32990, 16, 1304, 0), nrow = 2, ncol = 2))
help("prop.table")
install.packages("devtools")
install.packages("devtools")
install.packages("dplyr")
install.packages("dplyr")
memory.limit()
memory.limit(size = NA)
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
library(devtools)
install_github("StatsWithR/statsr")
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
arbuthnot
View(arbuthnot)
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
arbuthnot$girl
arbuthnot$girls
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line()
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
ggplot(data = arbuthnot$boys, aes(x = year, y = total)) +
geom_line() +
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = boys)) +
geom_line() +
geom_point()
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
data(present)
dim(present)
names(present)
range(present$year)
present <- present %>%
mutate(total = boys + girls)
present$boys / present$total
present <- present %>%
mutate(prop_boys = boys / total)
ggplot(data = present, aes(x = year, y = prop_boys)) +
geom_line() +
geom_point()
present <- present %>%
mutate(more_boys = boys > total)
ggplot(data = present, aes(x = year, y = more_boys)) +
geom_line() +
geom_point()
present$more_boys
present <- present %>%
mutate(prop_boy_girl = boys / girls)
present, aes(x = year, y = prop_boy_girl)) +
ggplot(data = present, aes(x = year, y = prop_boy_girl)) +
geom_line() +
geom_point()
View(present)
data(arbuthnot)
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
dim(arbuthnot)
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
data(present)
present <- present %>%
mutate(more_boys = boys > total)
present <- present %>%
mutate(total = boys + girls)
present <- present %>%
mutate(more_boys = boys > total)
present$more_boys
present <- present %>%
mutate(more_boys = boys > girls)
table(present$more_boys)
library(ggplot2)
library(dplyr)
setwd("~/Documentos/Coursera-Statistics/Introduction-to-Probability-and-Data/intro-to-probability-and-data/project")
load("brfss2013.RData")
load("selected_nzes2011.RData")
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav) %>%
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav)
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav) %>%
str()
brfss2013 %>%
select(genhlth, sleptim1, marital) %>%
str()
selected_nzes2011 %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(genhlth) %>%
summarise(count = n())
brfss2013 %>%
group_by(genhlth) %>%
summarise(count = n())
brfss2013 %>%
filter(!is.na(genhlth)) %>%
group_by(genhlth) %>%
summarise(count = n())
brfss2013 %>%
select(children, _rfhlth) %>%
brfss2013 %>%
select(children, "_rfhlth") %>%
str()
grep("rfhlth", names(brfss2013), value = TRUE)
grep("chldcnt", names(brfss2013), value = TRUE)
brfss2013 %>%
select(children, X_chldcnt) %>%
str()
level(X_chldcnt)
levels(X_chldcnt)
levels(brfss2013$X_chldcnt)
brfss2013 %>%
select(cadult) %>%
str()
levels(brfss2013$cadult)
levels(brfss2013$cadult)[0]
brfss2013 %>%
select(sleptim1) %>%
str()
brfss2013 %>%
select(qlstres2) %>%
str()
brfss2013 %>%
select(qlhlth2) %>%
str()
brfss2013 %>%
select(exerany2) %>%
str()
grep("rfbmi5", names(brfss2013), value = TRUE)
brfss2013 %>%
select(X_rfbmi5) %>%
str()
brfss2013 %>%
select(lsatisfy) %>%
str()
levels(brfss2013$lsatisfy)
